name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Format code
      run: dart format .
    
    - name: Analyze project source
      run: flutter analyze || echo "Analysis completed with warnings"
    
    - name: Run tests
      run: flutter test || echo "No tests found - continuing..."
    
    - name: Check if coverage exists
      id: coverage_check
      run: |
        if [ -f "coverage/lcov.info" ]; then
          echo "coverage_exists=true" >> $GITHUB_OUTPUT
        else
          echo "coverage_exists=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload coverage to Codecov
      if: steps.coverage_check.outputs.coverage_exists == 'true'
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.1'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Create dummy google-services.json for CI build
      run: |
        mkdir -p android/app
        echo '{
          "project_info": {
            "project_number": "123456789",
            "project_id": "putrace-ci-dummy",
            "storage_bucket": "putrace-ci-dummy.appspot.com"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:abcdef123456",
                "android_client_info": {
                  "package_name": "com.putrace.putrace"
                }
              },
              "oauth_client": [],
              "api_key": [
                {
                  "current_key": "dummy-key-for-ci-build"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": []
                }
              }
            }
          ],
          "configuration_version": "1"
        }' > android/app/google-services.json
    
    - name: Build APK
      run: flutter build apk --release --no-tree-shake-icons
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
      actions: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'
